%%
% % This function will apply full theory to the dataset/simulations

%%output in the order of Fitted Y Fitted theta parameters residuals and saturation 

function [j_nl,para,res,mse,Y_fit,T,Full_fun3,sat_out,ci] = Full_theory_NLfit_function_c2(t1,S1,Ks)

res=0; mse1= 0; mse2 = 0; mse3 = 0;
ka = Ks(1);
kd = Ks(2);
kxl = Ks(3);
IP_sat = Ks(4);
%b0 = real([ka/(ka+kd) tp_inv tn_inv]);
b0 = abs(real([ka kd kxl]));
%tp_inv = ((0.5*(B(1)+B(2)+B(3))*(1+sqrt(1-(4*B(1)*B(3)/((B(1)+B(2)+B(3))^2))))));
%tn_inv = (0.5*(B(1)+B(2)+B(3))*(1-sqrt(1-(4*B(1)*B(3)/((B(1)+B(2)+B(3))^2)))));
%B(1)=(B(1)/(B(1)+B(2)))

Full_fun = @(B, x) IP_sat*(1-(((0.5*((B(1).*x(:,2))+B(2)+B(3)).*(1-sqrt(1-(4*(B(1).*x(:,2)).*B(3)./(((B(1).*x(:,2))+B(2)+B(3)).^2)))))).*exp((-((0.5*((B(1).*x(:,2))+B(2)+B(3)).*(1+sqrt(1-(4*(B(1).*x(:,2)).*B(3)./(((B(1).*x(:,2))+B(2)+B(3)).^2))))))).*x(:,1))-((0.5*((B(1).*x(:,2))+B(2)+B(3)).*(1+sqrt(1-(4*(B(1).*x(:,2)).*B(3)./(((B(1).*x(:,2))+B(2)+B(3)).^2)))))).*exp(-x(:,1).*((0.5*((B(1).*x(:,2))+B(2)+B(3)).*(1-sqrt(1-(4*(B(1).*x(:,2)).*B(3)./(((B(1).*x(:,2))+B(2)+B(3)).^2))))))))./((0.5*((B(1).*x(:,2))+B(2)+B(3)).*(1-sqrt(1-(4*(B(1).*x(:,2)).*B(3)./(((B(1).*x(:,2))+B(2)+B(3)).^2)))))-((0.5*((B(1).*x(:,2))+B(2)+B(3)).*(1+sqrt(1-(4*(B(1).*x(:,2)).*B(3)./(((B(1).*x(:,2))+B(2)+B(3)).^2))))))) + (((B(1).*x(:,2))./((B(1).*x(:,2))+B(2))).*B(3).*(exp(-x(:,1).*((0.5*((B(1).*x(:,2))+B(2)+B(3)).*(1+sqrt(1-(4*(B(1).*x(:,2)).*B(3)./(((B(1).*x(:,2))+B(2)+B(3)).^2)))))))-exp(-x(:,1).*(0.5*((B(1).*x(:,2))+B(2)+B(3)).*(1-sqrt(1-(4*(B(1).*x(:,2)).*B(3)./(((B(1).*x(:,2))+B(2)+B(3)).^2)))))))./((0.5*((B(1).*x(:,2))+B(2)+B(3)).*(1-sqrt(1-(4*(B(1).*x(:,2)).*B(3)./(((B(1).*x(:,2))+B(2)+B(3)).^2)))))-((0.5*((B(1).*x(:,2))+B(2)+B(3)).*(1+sqrt(1-(4*(B(1).*x(:,2)).*B(3)./(((B(1).*x(:,2))+B(2)+B(3)).^2)))))))));
% B = [ka kd kxl]

b_nl = [0 0 0];
try
[b_nl,r,J,COVB,mse1] = nlinfit(t1,S1,Full_fun,b0);
catch
end

sat_out = Ks(4);
inc = 0.01;
for i = 1:1000 
    T(i) = i*inc;
end
inc=1;
for i = 1001:4850
    T(i)=10+(i-1000);
end
T=T';
T(:,2)=1;
T1 = T;
T1(:,2) = 3;
T = cat(1,T,T1);
Y_fit(:,1) = Full_fun(b_nl,T);

ka = b_nl(1);
kd= b_nl(2);

%ka = b_nl(2)/(n*1.2*10^(-5));
kxl = b_nl(3);
%t05 = log(2)/kd;
res = S1-Full_fun(b_nl,t1);
para = [ka kd kxl IP_sat];

%% Now in order to model the Isat I have developed a technique which will
% fish out the right I_sat 
Full_fun2 = @(G, x) G(3)*(1-(((0.5*((G(1).*x(:,2))+G(2)+kxl).*(1-sqrt(1-(4*(G(1).*x(:,2)).*kxl./(((G(1).*x(:,2))+G(2)+kxl).^2)))))).*exp((-((0.5*((G(1).*x(:,2))+G(2)+kxl).*(1+sqrt(1-(4*(G(1).*x(:,2)).*kxl./(((G(1).*x(:,2))+G(2)+kxl).^2))))))).*x(:,1))-((0.5*((G(1).*x(:,2))+G(2)+kxl).*(1+sqrt(1-(4*(G(1).*x(:,2)).*kxl./(((G(1).*x(:,2))+G(2)+kxl).^2)))))).*exp(-x(:,1).*((0.5*((G(1).*x(:,2))+G(2)+kxl).*(1-sqrt(1-(4*(G(1).*x(:,2)).*kxl./(((G(1).*x(:,2))+G(2)+kxl).^2))))))))./((0.5*((G(1).*x(:,2))+G(2)+kxl).*(1-sqrt(1-(4*(G(1).*x(:,2)).*kxl./(((G(1).*x(:,2))+G(2)+kxl).^2)))))-((0.5*((G(1).*x(:,2))+G(2)+kxl).*(1+sqrt(1-(4*(G(1).*x(:,2)).*kxl./(((G(1).*x(:,2))+G(2)+kxl).^2))))))) + (((G(1).*x(:,2))./((G(1).*x(:,2))+G(2))).*kxl.*(exp(-x(:,1).*((0.5*((G(1).*x(:,2))+G(2)+kxl).*(1+sqrt(1-(4*(G(1).*x(:,2)).*kxl./(((G(1).*x(:,2))+G(2)+kxl).^2)))))))-exp(-x(:,1).*(0.5*((G(1).*x(:,2))+G(2)+kxl).*(1-sqrt(1-(4*(G(1).*x(:,2)).*kxl./(((G(1).*x(:,2))+G(2)+kxl).^2)))))))./((0.5*((G(1).*x(:,2))+G(2)+kxl).*(1-sqrt(1-(4*(G(1).*x(:,2)).*kxl./(((G(1).*x(:,2))+G(2)+kxl).^2)))))-((0.5*((G(1).*x(:,2))+G(2)+kxl).*(1+sqrt(1-(4*(G(1).*x(:,2)).*kxl./(((G(1).*x(:,2))+G(2)+kxl).^2)))))))));
g0 = [ka kd sat_out];
g_nl = [0 0 0];
try
[g_nl,r,J,COVB,mse2] = nlinfit(t1,S1,Full_fun2,g0);

catch
end

Y_fit(:,2) = Full_fun2(g_nl,T);
sat_out = g_nl(3);
ka = g_nl(1);
%ka = mean([ka g_nl(1)])
kd = g_nl(2);
%kd = mean([kd g_nl(2)])
para2 = [ka kd kxl sat_out];
para = cat(2,para,para2);
%% The third layer of fitting where we fit everything 
Full_fun3 = @(J, x) J(4)*(1-(((0.5*((J(1).*x(:,2))+J(2)+J(3)).*(1-sqrt(1-(4*(J(1).*x(:,2)).*J(3)./(((J(1).*x(:,2))+J(2)+J(3)).^2)))))).*exp((-((0.5*((J(1).*x(:,2))+J(2)+J(3)).*(1+sqrt(1-(4*(J(1).*x(:,2)).*J(3)./(((J(1).*x(:,2))+J(2)+J(3)).^2))))))).*x(:,1))-((0.5*((J(1).*x(:,2))+J(2)+J(3)).*(1+sqrt(1-(4*(J(1).*x(:,2)).*J(3)./(((J(1).*x(:,2))+J(2)+J(3)).^2)))))).*exp(-x(:,1).*((0.5*((J(1).*x(:,2))+J(2)+J(3)).*(1-sqrt(1-(4*(J(1).*x(:,2)).*J(3)./(((J(1).*x(:,2))+J(2)+J(3)).^2))))))))./((0.5*((J(1).*x(:,2))+J(2)+J(3)).*(1-sqrt(1-(4*(J(1).*x(:,2)).*J(3)./(((J(1).*x(:,2))+J(2)+J(3)).^2)))))-((0.5*((J(1).*x(:,2))+J(2)+J(3)).*(1+sqrt(1-(4*(J(1).*x(:,2)).*J(3)./(((J(1).*x(:,2))+J(2)+J(3)).^2))))))) + (((J(1).*x(:,2))./((J(1).*x(:,2))+J(2))).*J(3).*(exp(-x(:,1).*((0.5*((J(1).*x(:,2))+J(2)+J(3)).*(1+sqrt(1-(4*(J(1).*x(:,2)).*J(3)./(((J(1).*x(:,2))+J(2)+J(3)).^2)))))))-exp(-x(:,1).*(0.5*((J(1).*x(:,2))+J(2)+J(3)).*(1-sqrt(1-(4*(J(1).*x(:,2)).*J(3)./(((J(1).*x(:,2))+J(2)+J(3)).^2)))))))./((0.5*((J(1).*x(:,2))+J(2)+J(3)).*(1-sqrt(1-(4*(J(1).*x(:,2)).*J(3)./(((J(1).*x(:,2))+J(2)+J(3)).^2)))))-((0.5*((J(1).*x(:,2))+J(2)+J(3)).*(1+sqrt(1-(4*(J(1).*x(:,2)).*J(3)./(((J(1).*x(:,2))+J(2)+J(3)).^2)))))))));
j0 = [ka kd kxl sat_out];
j_nl = [0 0 0 0];
ci = [55 55;55 55;55 55;55 55];
try
    
    [j_nl,r,J,COVB,mse3] = nlinfit(t1,S1,Full_fun3,j0);
    ci = nlparci(j_nl,r,'covar',COVB);
    
catch
end
    Y_fit(:,3) = Full_fun3(j_nl,T);
sat_out = j_nl(4);
ka = j_nl(1);
kd = j_nl(2);
kxl = j_nl(3);
para3 = [ka kd kxl sat_out];
para = cat(2,para,para2,para3);
if (ka==0 & kd ==0 & kxl == 0 & mse3 == 0);
    mse = NaN;
else
    mse = mse3;
end
